{"version":3,"sources":["components/shared/Navbar.tsx","components/shared/SectionList.tsx","components/routes/Introduction/Introduction.tsx","components/routes/Examples/PokemonCard.tsx","components/shared/SummaryButton.tsx","components/routes/Examples/DefaultPokemonCard.tsx","components/routes/Examples/Pokedex.tsx","components/routes/Examples/ToolBar.tsx","components/routes/Examples/GameZone.tsx","components/routes/Examples/Examples.tsx","components/routes/Conclusion/queryTab.png","components/routes/Conclusion/Conclusion.tsx","components/routes/Sources/Sources.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","to","list","id","link","title","label","subSection","SectionList","location","useLocation","activeLink","index","pathName","pathname","split","splitedLink","map","item","indexList","Fragment","section","length","Introduction","fontSize","PokemonCard","pokemon","type","pokeball","removeFct","addFct","React","useState","showInformation","setShowInformation","name","order","scope","height","weight","base_experience","types","href","url","rel","target","colSpan","onClick","disabled","SummaryButton","content","displaySummary","setDisplaySummary","style","float","POKEMON","SUMMARY_CONTENT","TITLE_CONTENT","DefaultPokemonCard","Pokedex","setPokemon","removePokemon","initialArray","findPokemonIndex","findIndex","p","splice","ToolBar","numberOfPokemon","withFakePromise","setNumberOfPokeball","setPokeball","inputPokeball","setInputPokeball","useEffect","fakePromise","pokeballNumber","Promise","resolve","onClickWithPromise","pNumber","a","onInput","e","parseInt","currentTarget","value","min","onKeyDown","key","preventDefault","placeholder","MINE_POKEMON","GameZone","Examples","path","component","Conclusion","src","queryTab","alt","width","Sources","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.414a9c45.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return <nav className=\"navbar navbar-light\">\n    <div className=\"container-fluid\">\n      <Link className=\"navbar-brand\" to=\"/\">Devoxx 2021 - React Testing Library</Link>\n    </div>\n  </nav>\n};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\ninterface ISection {\n  id: string;\n  link: string;\n  title: string;\n  label: string;\n}\ninterface ISummaryList extends ISection {\n  subSection?: ISection[];\n}\n\nconst list: ISummaryList[] = [\n  {\n    id: 'introduction',\n    link: '/',\n    title: 'Introduction section',\n    label: 'Introduction'\n  },\n  {\n    id: 'examples',\n    link: '/examples',\n    title: 'Examples section',\n    label: 'Exemples',\n    subSection: [\n      {\n        id: 'defaultPokemonCard',\n        link: '/examples/default',\n        title: 'Default Pokemon card',\n        label: 'Card Pokemon',\n      },\n      {\n        id: 'pokedex',\n        link: '/examples/pokedex',\n        title: 'Pokedex',\n        label: 'Pokedex',\n      },\n      {\n        id: 'gameZone',\n        link: '/examples/gameZone',\n        title: 'Zone de jeu',\n        label: 'Game zone',\n      }\n    ]\n  },\n  {\n    id: 'conclusion',\n    link: '/conclusion',\n    title: 'Conclusion section',\n    label: 'Conclusion'\n  },\n  {\n    id: 'sources',\n    link: '/sources',\n    title: 'Sources section',\n    label: 'Sources'\n  },\n];\n\nexport const SectionList = () => {\n  const location = useLocation();\n\n  const activeLink = (link: string, index: number): boolean => {\n    const pathName = location.pathname.split(\"/\");\n    const splitedLink = link.split(\"/\");\n\n    if (pathName[index] === \"\" && link === \"/\") {\n      return true;\n    }\n    return !!(pathName[index] && pathName[index] === splitedLink[index]);\n  }\n\n  return <ul className=\"list-group list-group-flush list-group-numbered\">\n    {\n      list.map((item: ISummaryList, indexList: number) =>\n        <React.Fragment key={item.id}>\n          <Link\n            to={item.link}\n            title={item.title}\n            className={`list-group-item list-group-item-action${activeLink(item.link, 1) ? \" list-group-item-secondary\" : \"\"}${item.subSection ? \" border-0\" : \"\"}`}>\n            {item.label}\n\n          </Link>\n          {\n            item.subSection ?\n              <ul className=\"list-group list-group-flush\">\n                {\n                  item.subSection.map((section: ISection, index: number) =>\n                    <Link\n                      key={`${item.id}-${section.id}`}\n                      to={section.link}\n                      title={section.title}\n                      className={`list-group-item fw-lighter px-4${activeLink(section.link, 2) ? ' text-primary' : ''}${item.subSection!.length > index + 1 ? \" border-0\" : (list.length > indexList + 1 ? \" border-bottom\" : \"\")}`}>\n                      {section.label}\n                    </Link>\n                  )\n                }\n\n              </ul>\n              : null\n          }\n\n        </React.Fragment>\n      )\n    }\n\n  </ul>\n};","import React from 'react';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nexport const Introduction = () => {\n  return <div className=\"introduction-page container row\">\n    <div className=\"col-12\">\n      <h3 className=\"mb-3\">Introduction</h3>\n      <p className=\"mb-4\">\n        <ArrowForwardIcon fontSize=\"small\" /> React Testing Library (RTL) par Kent C. Dodds.\n      </p>\n      <p className=\"mb-1\">\n        <ArrowForwardIcon fontSize=\"small\" /> Experience utilisateur.\n      </p>\n      <figure className=\"mb-4\">\n        <blockquote className=\"blockquote\">\n          <p>The more your tests resemble the way your software is used, the more confidence they can give you.</p>\n        </blockquote>\n        <figcaption className=\"blockquote-footer\">\n          Guiding Principles in <cite title=\"Source Title\">React Testing Library web site</cite>\n        </figcaption>\n      </figure>\n      <p className=\"mb-4\">\n        <ArrowForwardIcon fontSize=\"small\" />N'encourage pas à tester les détails d'implémentation.\n      </p>\n      <p className=\"mb-4\">\n        <ArrowForwardIcon fontSize=\"small\" /> N'est pas un \"test runner\" ou un framework.\n      </p>\n      <p className=\"mb-4\">\n        <ArrowForwardIcon fontSize=\"small\" />React Testing Library est inclu dans create-react-app.</p>\n    </div>\n  </div>\n}","import React from 'react';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nexport interface IPokemonType {\n  name: string;\n  url: string;\n}\n\nexport interface IPokemon {\n  id: number;\n  name: string;\n  height: number;\n  order: number;\n  weight: number;\n  base_experience: number;\n  types?: IPokemonType[];\n}\n\nexport interface IPokemonCardProps {\n  pokemon: IPokemon;\n  type?: \"Mine\" | \"Grass\";\n  pokeball?: boolean;\n  removeFct?: (id: number) => void;\n  addFct?: (id: number) => void;\n}\n\nexport const PokemonCard = ({ pokemon, type, pokeball, removeFct, addFct }: IPokemonCardProps) => {\n  const [showInformation, setShowInformation] = React.useState<Boolean>(false);\n\n  return <div className=\"pokemon-card card mb-2\">\n    <div className=\"card-body\"\n      title={type ? (type === \"Mine\" ? \"Pokemon card: Pokedex\" : \"Pokemon card\") : \"Pokemon card\"}>\n      <div className=\"d-flex align-items-baseline justify-content-between\">\n        <h5 className=\"card-title text-capitalize\" title=\"Pokemon name\">{pokemon.name}</h5>\n        <span title=\"Pokemon number\">{pokemon.order}</span>\n      </div>\n\n      <h6 className=\"card-subtitle mb-2 text-muted\">{type === \"Mine\" ? \"Pokedex\" : \"\"}</h6>\n      <table className=\"table table-striped table-sm\" title=\"Pokemon information\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\">Height</th>\n            <td title=\"Pokemon information - height\">{pokemon.height}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Weight</th>\n            <td title=\"Pokemon information - weight\">{pokemon.weight}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Base experience</th>\n            <td title=\"Pokemon information - base experience\">{pokemon.base_experience}</td>\n          </tr>\n          {\n            (showInformation && pokemon.types) &&\n            <tr>\n              <th scope=\"row\">Types</th>\n              <td title=\"Pokemon information - types\">\n                {\n                  pokemon.types.map((type: IPokemonType, index: number) =>\n                    <React.Fragment key={index}>\n                      <a className=\"text-capitalize\"\n                        href={type.url}\n                        rel=\"noreferrer\"\n                        target=\"_blank\">\n                        {type.name}\n                      </a><br />\n                    </React.Fragment>\n                  )\n                }\n              </td>\n            </tr>\n          }\n        </tbody>\n        {\n          pokemon.types ?\n            <tfoot>\n              <tr>\n                <td className=\"text-center\" colSpan={2}>\n                  <button type=\"button\"\n                    onClick={() => setShowInformation(!showInformation)}\n                    className=\"btn btn-link btn-sm w-100 bg-white\"\n                    title={showInformation ? \"Show less information\" : \"Show more information\"}>\n                    {\n                      showInformation ?\n                        <KeyboardArrowUpIcon fontSize=\"small\" />\n                        : <KeyboardArrowDownIcon fontSize=\"small\" />\n                    }\n\n                  </button>\n                </td>\n              </tr>\n            </tfoot>\n            : null\n        }\n      </table>\n      <a type=\"button\"\n        href={`https://pokeapi.co/api/v2/pokemon/${pokemon.id}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"btn btn-light mx-2\"\n        title=\"View Pokemon information\">\n        All information\n      </a>\n      {\n        type ?\n          (type === \"Mine\" ?\n            <button\n              className=\"btn btn-danger\"\n              disabled={!removeFct}\n              onClick={removeFct ? () => removeFct(pokemon.id) : () => { }}\n              title=\"Remove Pokemon\">\n              Remove\n            </button> :\n            <button\n              className=\"btn btn-success\"\n              title=\"Add Pokemon\"\n              onClick={addFct ? () => addFct(pokemon.id) : () => { }}\n              disabled={!pokeball && !addFct}>\n              Add to Pokedex\n            </button>\n          )\n          : null\n      }\n    </div>\n  </div>\n}","import React from 'react';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nexport interface ISummaryButtonProps {\n  content: JSX.Element;\n  title: JSX.Element;\n}\n\nexport const SummaryButton = ({ content, title }: ISummaryButtonProps) => {\n  const [displaySummary, setDisplaySummary] = React.useState<Boolean>(false);\n  return <div className={`mb-3 summary-button${displaySummary ? \" border p-3\" : \"\"}`}>\n    {\n      displaySummary ?\n        <button\n          type=\"button\"\n          title=\"Hide summary\"\n          onClick={() => setDisplaySummary(false)}\n          className=\"btn btn-light btn-sm float-end\">\n          <ClearIcon fontSize=\"small\" />\n        </button>\n        :\n        <div className=\"d-flex align-items-center justify-content-between\">\n          {title}\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-sm float-right\"\n            style={{ float: \"right\" }}\n            title=\"View summary\"\n            onClick={() => setDisplaySummary(true)}>\n            Summary\n          </button>\n        </div>\n    }\n    {displaySummary ? content : null}\n  </div>\n};","import React from 'react';\n\nimport { IPokemon, PokemonCard } from './PokemonCard';\nimport { SummaryButton } from '../../shared/SummaryButton';\n\nconst POKEMON: IPokemon[] = [\n  {\n    id: 1,\n    name: \"bulbasaur\",\n    height: 7,\n    order: 1,\n    weight: 69,\n    base_experience: 64,\n    types: [\n      {\n        name: \"grass\",\n        url: \"https://pokeapi.co/api/v2/type/12/\"\n      },\n      {\n        name: \"poison\",\n        url: \"https://pokeapi.co/api/v2/type/4/\"\n      }\n    ]\n  }\n];\n\nconst SUMMARY_CONTENT: JSX.Element = <div>\n  <ul>\n    <li>\n      <h6>\n        Rendre un composant{\" \"}\n        <a href=\"https://testing-library.com/docs/react-testing-library/api#render\">(reference)</a>\n      </h6>\n      <span>RTL est utilisée pour interagire avec le composant comme un utilisateur le ferait</span>\n      <pre className=\"mt-3\"><code>\n        <mark>render(monComposant);</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        Acceder au composant et l'afficher{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#screen\">(reference)</a></h6>\n      <pre className=\"mt-3\"><code>\n        <mark>screen.debug();</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        Sélectionner un élément{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#priority\">(reference)</a>\n      </h6>\n      <span>Après avoir rendu le composant - RTL offre differentes fonctions de recherche</span>\n      <pre className=\"mt-3\"><code>\n        <mark>screen.getByText(...);</mark>\n        <mark>screen.getByRole(...);</mark>\n      </code></pre>\n    </li>\n    <li className=\"mt-3\">\n      <h6>\n        Chercher un élément{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#types-of-queries\">(reference)</a>\n      </h6>\n      <pre className=\"mt-3\"><code>\n        <mark>screen.queryByText(...);</mark>\n      </code></pre>\n    </li>\n  </ul>\n</div>\nconst TITLE_CONTENT: JSX.Element =\n  <div>\n    <h3 className=\"mb-0\">Card Pokemon</h3>\n    <span className=\"text-secondary fw-lighter\">getBy, queryBy</span>\n  </div>\nexport const DefaultPokemonCard = () => {\n  return <div className=\"container row\">\n    <div className=\"col-12\">\n      <SummaryButton title={TITLE_CONTENT} content={SUMMARY_CONTENT} />\n    </div>\n    {POKEMON.map((pokemon: IPokemon) =>\n      <div key={pokemon.id} className=\"col-6\"><PokemonCard pokemon={pokemon} /></div>)}\n  </div>\n}","import React from 'react';\n\nimport { IPokemon, PokemonCard } from './PokemonCard';\nimport { SummaryButton } from '../../shared/SummaryButton';\n\nconst POKEMON: IPokemon[] = [\n  {\n    id: 1,\n    name: \"bulbasaur\",\n    height: 7,\n    order: 1,\n    weight: 69,\n    base_experience: 64,\n    types: [\n      {\n        name: \"grass\",\n        url: \"https://pokeapi.co/api/v2/type/12/\"\n      },\n      {\n        name: \"poison\",\n        url: \"https://pokeapi.co/api/v2/type/4/\"\n      }\n    ]\n  },\n  {\n    id: 16,\n    name: \"pidgey\",\n    height: 3,\n    order: 21,\n    weight: 18,\n    base_experience: 50,\n    types: [\n      {\n        name: \"normal\",\n        url: \"https://pokeapi.co/api/v2/type/1/\"\n      },\n      {\n        name: \"flying\",\n        url: \"https://pokeapi.co/api/v2/type/3/\"\n      }\n    ]\n  },\n  {\n    id: 10,\n    name: \"caterpie\",\n    height: 3,\n    order: 14,\n    weight: 29,\n    base_experience: 39,\n    types: [\n      {\n        name: \"bug\",\n        url: \"https://pokeapi.co/api/v2/type/7/\"\n      }\n    ]\n  }\n];\n\nconst SUMMARY_CONTENT: JSX.Element = <div>\n  <ul>\n    <li>\n      <h6>\n        Sélectionner plusieurs éléments{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#types-of-queries\">(reference)</a>\n      </h6>\n      <pre className=\"mt-3\"><code>\n        <mark>screen.getAllByRole(...);</mark>\n        <mark>screen.queryAllByText(...);</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        Sélectionner un élément{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#priority\">(reference)</a>\n      </h6>\n      <span>RTL dispose de plusieurs fonctions de selection</span>\n      <pre className=\"mt-3\"><code>\n        <mark>screen.getByTitle(...);</mark>\n      </code></pre>\n      <ul>\n        <li>Role : getByRole</li>\n        <li>LabelText : getByLabelText</li>\n        <li>PlaceholderText : getByPlaceholderText</li>\n        <li>AltText : getByAltText</li>\n        <li>Title : getByTitle</li>\n        <li>DisplayValue : getByDisplayValue</li>\n      </ul>\n    </li>\n  </ul>\n</div>\nconst TITLE_CONTENT: JSX.Element =\n  <div>\n    <h3 className=\"mb-0\">Pokedex</h3>\n    <span className=\"text-secondary fw-lighter\">getAll, type de recherche</span>\n  </div>\nexport const Pokedex = () => {\n  const [pokemon, setPokemon] = React.useState<IPokemon[]>(POKEMON);\n\n  const removePokemon = (id: number) => {\n    const initialArray = [...pokemon];\n    const findPokemonIndex = initialArray.findIndex((p: IPokemon) => p.id === id);\n    if (findPokemonIndex > -1) {\n      initialArray.splice(findPokemonIndex, 1)\n      setPokemon(initialArray);\n    }\n  }\n\n  return <div className=\"container row\">\n    <div className=\"col-12\">\n      <SummaryButton title={TITLE_CONTENT} content={SUMMARY_CONTENT} />\n    </div>\n    {pokemon.map((item: IPokemon) =>\n      <div key={item.id} className=\"col-6\">\n        <PokemonCard pokemon={item} type=\"Mine\" removeFct={removePokemon} />\n      </div>\n    )}\n  </div>\n}","import React from 'react';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport interface IToolBarProps {\n  numberOfPokemon: number;\n  withFakePromise?: boolean;\n  setNumberOfPokeball?: (numberOfPokeball: number) => void;\n}\n\nexport const ToolBar = ({ numberOfPokemon, withFakePromise, setNumberOfPokeball }: IToolBarProps) => {\n  const [pokeball, setPokeball] = React.useState<number>(0);\n  const [inputPokeball, setInputPokeball] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (setNumberOfPokeball) {\n      setNumberOfPokeball(pokeball);\n    }\n  }, [pokeball, setNumberOfPokeball]);\n\n  const typePokeballHandler = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    setInputPokeball(parseInt(e.currentTarget.value, 10));\n  }\n\n  const preventKeyDownHandler = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'e' || e.key === ',' || e.key === '.' || e.key === ';') {\n      e.preventDefault();\n    }\n  }\n\n  const fakePromise = (pokeballNumber: number): Promise<number> => {\n    return Promise.resolve(pokeballNumber);\n  }\n\n  const onClickWithPromise = async (pNumber: number) => {\n    const pokeballNumber = await fakePromise(pNumber);\n    setPokeball(pokeball + pokeballNumber);\n  }\n\n  return <div className=\"tool-bar card px-3\">\n    <div className=\"d-flex justify-content-between py-2 align-items-center\">\n      <div className=\"information\">\n        <span className=\"me-2\" title=\"Number of pokemon in pokedex\">\n          Pokedex: <strong>{numberOfPokemon}</strong>\n        </span>\n        <span className=\"text-secondary\">|</span>\n        <span className=\"ms-2\" title=\"Number of pokeball\">\n          Pokeball: <strong>{pokeball}</strong>\n        </span>\n      </div>\n      <div className=\"input-group w-50\">\n        <input\n          type=\"number\"\n          id=\"pokeball\"\n          name=\"pokeball\"\n          onInput={typePokeballHandler}\n          title=\"Number of Pokeball to add\"\n          className=\"form-control form-control-sm\"\n          min=\"0\"\n          onKeyDown={preventKeyDownHandler}\n          value={inputPokeball || \"\"}\n          placeholder=\"ex : 5\" />\n        <button\n          className=\"btn btn-outline-secondary btn-sm\"\n          title=\"Add number of Pokeball write in input\"\n          disabled={!inputPokeball}\n          onClick={() => inputPokeball ?\n            (withFakePromise ? onClickWithPromise(inputPokeball) : setPokeball(pokeball + inputPokeball))\n            : {}}\n          type=\"button\">\n          Ajouter les Pokeball\n        </button>\n        <button\n          className=\"btn btn-outline-secondary btn-sm\"\n          title=\"Add one Pokeball\"\n          onClick={() => setPokeball(pokeball + 1)}\n          type=\"button\">\n          <AddIcon fontSize=\"small\" />\n        </button>\n      </div>\n    </div>\n  </div>\n};","import React from 'react';\n\nimport { IPokemon, PokemonCard } from './PokemonCard';\nimport { ToolBar } from './ToolBar';\nimport { SummaryButton } from '../../shared/SummaryButton';\n\nconst MINE_POKEMON: IPokemon[] = [];\nconst POKEMON: IPokemon[] = [\n  {\n    id: 10,\n    name: \"caterpie\",\n    height: 3,\n    order: 14,\n    weight: 29,\n    base_experience: 39,\n    types: [\n      {\n        name: \"bug\",\n        url: \"https://pokeapi.co/api/v2/type/7/\"\n      }\n    ]\n  }\n]\n\nconst SUMMARY_CONTENT: JSX.Element = <div>\n  <ul>\n    <li>\n      <h6>\n        FireEvent{\" \"}\n        <a href=\"https://testing-library.com/docs/dom-testing-library/api-events#fireevent\">(reference)</a>\n      </h6>\n      <span>Pour simuler une interraction avec le composant</span>\n      <pre className=\"mt-3\"><code>\n        <mark>fireEvent.click(...);</mark>\n        <mark>fireEvent.change(...)</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        UserEvent{\" \"}\n        <a href=\"https://testing-library.com/docs/ecosystem-user-event\">(reference)</a>\n      </h6>\n      <span>RTL apporte une extension pour les évènements des utilisateurs : UserEvent. Elle est plus proche du comportement du browser. Mais elle n'inclus pas encore toutes les fonctionnalités de FireEvent </span>\n      <pre className=\"mt-3\"><code>\n        <mark>userEvent.type(...);</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        FindBy{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#types-of-queries\">(reference)</a>\n      </h6>\n      <span>Utilisé pour les élements de type asynchrone, retourne une Promise</span>\n      <pre className=\"mt-3\"><code>\n        <mark>await screen.findBy(...);</mark>\n      </code></pre>\n    </li>\n  </ul>\n</div>\nconst TITLE_CONTENT: JSX.Element =\n  <div>\n    <h3 className=\"mb-0\">Zone de jeu</h3>\n    <span className=\"text-secondary fw-lighter\">user event, findBy, async</span>\n  </div>\nexport const GameZone = () => {\n  const [pokeball, setPokeball] = React.useState<number>(0);\n\n  return <div className=\"container row\">\n    <div className=\"col-12\">\n      <SummaryButton title={TITLE_CONTENT} content={SUMMARY_CONTENT} />\n    </div>\n    <div className=\"col-12 mb-3\">\n      <ToolBar\n        numberOfPokemon={MINE_POKEMON.length}\n        setNumberOfPokeball={(pokeballNumber: number) => setPokeball(pokeballNumber)}\n      />\n    </div>\n    {POKEMON.map((pokemon: IPokemon) =>\n      <div key={pokemon.id} className=\"col-6\">\n        <PokemonCard pokemon={pokemon} type=\"Grass\" pokeball={pokeball > 0} />\n      </div>\n    )}\n  </div>\n}","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { DefaultPokemonCard } from './DefaultPokemonCard';\nimport { Pokedex } from './Pokedex';\nimport { GameZone } from './GameZone';\n\nexport const Examples = () => {\n  return <div className=\"example-page\">\n    <Switch>\n      <Route path=\"/examples/default\" component={DefaultPokemonCard} />\n      <Route path=\"/examples/pokedex\" component={Pokedex} />\n      <Route path=\"/examples/gameZone\" component={GameZone} />\n      <Redirect to=\"/examples/default\" />\n    </Switch>\n  </div>\n}","export default __webpack_public_path__ + \"static/media/queryTab.8efd99d8.png\";","import React from 'react';\n\nimport queryTab from './queryTab.png';\n\nexport const Conclusion = () => {\n  return <div className=\"conclusion-page container row\">\n    <div className=\"col-12\">\n      <h3 className=\"mb-3\">Conclusion</h3>\n      <div className=\"text-center\">\n        <img src={queryTab} alt=\"Query table\" width=\"65%\" /><br />\n        <a\n          className=\"small\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href=\"https://testing-library.com/docs/react-testing-library/cheatsheet#queries\">\n          (Source : React Testing web site - Cheatsheet)\n        </a>\n      </div>\n\n    </div>\n  </div>\n}","import React from 'react';\n\nexport const Sources = () => {\n  return <div className=\"Sources-page container row\">\n    <div className=\"col-12\">\n      <h3 className=\"mb-3\">Sources</h3>\n      <ul>\n        <li className=\"mb-3\">\n          Testing library documentation :{\" \"}\n          <a\n            href=\"https://testing-library.com/\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://testing-library.com/\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Github testing library :{\" \"}\n          <a\n            href=\"https://github.com/testing-library/jest-dom\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://github.com/testing-library/jest-dom\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          PokeAPI :{\" \"}\n          <a\n            href=\"https://pokeapi.co/\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://pokeapi.co/\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          How to use React Testing Library Tutorial :{\" \"}\n          <a\n            href=\"https://www.robinwieruch.de/react-testing-library\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://www.robinwieruch.de/react-testing-library\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Test Scenarios with React Testing Library :{\" \"}\n          <a\n            href=\"https://react-testing-library-examples.netlify.app/\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://react-testing-library-examples.netlify.app/\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Testing a Create React App TypeScript Project with Jest and React Testing Library :{\" \"}\n          <a\n            href=\"https://www.newline.co/@kchan/testing-a-create-react-app-typescript-project-with-jest-and-react-testing-library--c157b34e\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://www.newline.co/@kchan/testing-a-create-react-app-typescript-project-with-jest-and-react-testing-library--c157b34e\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Testing Playground :{\" \"}\n          <a\n            href=\"https://testing-playground.com/\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://testing-playground.com/\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Test your React App with react testing library and jest-dom :{\" \"}\n          <a\n            href=\"https://aatifbandey.medium.com/test-your-react-app-with-react-testing-library-and-jest-dom-26b92201bbe3\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://testing-playground.com/\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Navbar } from '../shared/Navbar';\nimport { SectionList } from '../shared/SectionList';\n\nimport { Introduction } from '../routes/Introduction/Introduction';\nimport { Examples } from '../routes/Examples/Examples';\nimport { Conclusion } from '../routes/Conclusion/Conclusion';\nimport { Sources } from '../routes/Sources/Sources';\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\" style={{ height: '100vh' }}>\n      <Navbar />\n      <div className=\"row h-100\">\n        <div className=\"col-3 py-4 pe-0\">\n          <SectionList />\n        </div>\n        <div className=\"col-9 py-4 bg-light\">\n          <Switch>\n            <Route exact path=\"/\" component={Introduction}></Route>\n            <Route path=\"/examples\" component={Examples}></Route>\n            <Route path=\"/conclusion\" component={Conclusion}></Route>\n            <Route path=\"/sources\" component={Sources}></Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}