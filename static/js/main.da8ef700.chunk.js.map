{"version":3,"sources":["components/shared/Navbar.tsx","components/shared/SectionList.tsx","components/shared/TwitterLink.tsx","components/routes/Home/Home.tsx","components/routes/Introduction/Introduction.tsx","components/routes/Examples/PokemonCard.tsx","components/shared/SummaryButton.tsx","contexts/pokedex.context.tsx","components/routes/Examples/DefaultPokemonCard.tsx","components/routes/Examples/PokemonCardWithoutType.tsx","components/routes/Examples/Pokedex.tsx","components/routes/Examples/ToolBar.tsx","components/routes/Examples/GameZone.tsx","components/routes/Examples/Examples.tsx","components/routes/Conclusion/queryTab.png","components/routes/Conclusion/Conclusion.tsx","components/routes/Sources/Sources.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","to","href","rel","title","target","list","id","link","label","subSection","SectionList","location","useLocation","activeLink","index","pathName","pathname","split","splitedLink","map","item","indexList","Fragment","section","length","TwitterLink","style","right","textDecoration","Home","Introduction","fontSize","PokemonCard","pokemon","type","pokeball","removeFct","addFct","React","useState","showInformation","setShowInformation","name","order","scope","height","weight","base_experience","types","url","colSpan","onClick","disabled","SummaryButton","content","displaySummary","setDisplaySummary","float","POKEMON","POKEMON_WITHOUT_TYPE","POKEDEX","PokedexContext","createContext","removePokemon","_id","addPokemon","_newPokemon","PokedexProvider","children","setPokemon","Provider","value","initialArray","findPokemonIndex","findIndex","p","splice","newPokemon","push","SUMMARY_CONTENT","TITLE_CONTENT","DefaultPokemonCard","PokemonCardWithoutType","Pokedex","useContext","ToolBar","numberOfPokemon","withFakePromise","setNumberOfPokeball","setPokeball","inputPokeball","setInputPokeball","useEffect","fakePromise","pokeballNumber","Promise","resolve","onClickWithPromise","pNumber","a","onInput","e","parseInt","currentTarget","min","onKeyDown","key","preventDefault","placeholder","GameZone","freePokemon","setFreePokemon","Date","now","Examples","path","component","Conclusion","src","queryTab","alt","width","Sources","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.da8ef700.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nexport const Navbar = () => {\n  return <nav className=\"navbar navbar-light\">\n    <div className=\"container-fluid\">\n      <Link className=\"navbar-brand\" to=\"/\">Devoxx 2021 - React Testing Library</Link>\n      <a\n        href=\"https://github.com/alicia-stotz/devoxx2021-rtl\"\n        rel=\"noreferrer\"\n        title=\"GitHub repository link\"\n        target=\"_blank\">\n        <GitHubIcon />\n      </a>\n    </div>\n  </nav>\n};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\ninterface ISection {\n  id: string;\n  link: string;\n  title: string;\n  label: string;\n}\ninterface ISummaryList extends ISection {\n  subSection?: ISection[];\n}\n\nconst list: ISummaryList[] = [\n  {\n    id: 'introduction',\n    link: '/introduction',\n    title: 'Introduction section',\n    label: 'Introduction'\n  },\n  {\n    id: 'examples',\n    link: '/examples',\n    title: 'Examples section',\n    label: 'Exemples',\n    subSection: [\n      {\n        id: 'defaultPokemonCard',\n        link: '/examples/default',\n        title: 'Default Pokemon card',\n        label: 'Card Pokemon - Part 1',\n      },\n      {\n        id: 'pokemonCardWithoutType',\n        link: '/examples/withoutType',\n        title: 'Pokemon card without type',\n        label: 'Card Pokemon - Part 2',\n      },\n      {\n        id: 'pokedex',\n        link: '/examples/pokedex',\n        title: 'Pokedex',\n        label: 'Pokedex',\n      },\n      {\n        id: 'gameZone',\n        link: '/examples/gameZone',\n        title: 'Zone de jeu',\n        label: 'Game zone',\n      }\n    ]\n  },\n  {\n    id: 'conclusion',\n    link: '/conclusion',\n    title: 'Conclusion section',\n    label: 'Conclusion'\n  },\n  {\n    id: 'sources',\n    link: '/sources',\n    title: 'Sources section',\n    label: 'Sources'\n  },\n];\n\nexport const SectionList = () => {\n  const location = useLocation();\n\n  const activeLink = (link: string, index: number): boolean => {\n    const pathName = location.pathname.split(\"/\");\n    const splitedLink = link.split(\"/\");\n\n    if (pathName[index] === \"\" && link === \"/\") {\n      return true;\n    }\n    return !!(pathName[index] && pathName[index] === splitedLink[index]);\n  }\n\n  return <ul className=\"list-group list-group-flush list-group-numbered\">\n    {\n      list.map((item: ISummaryList, indexList: number) =>\n        <React.Fragment key={item.id}>\n          <Link\n            to={item.link}\n            title={item.title}\n            className={`list-group-item list-group-item-action${activeLink(item.link, 1) ? \" list-group-item-secondary\" : \"\"}${item.subSection ? \" border-0\" : \"\"}`}>\n            {item.label}\n\n          </Link>\n          {\n            item.subSection ?\n              <ul className=\"list-group list-group-flush\">\n                {\n                  item.subSection.map((section: ISection, index: number) =>\n                    <Link\n                      key={`${item.id}-${section.id}`}\n                      to={section.link}\n                      title={section.title}\n                      className={`list-group-item fw-lighter px-4${activeLink(section.link, 2) ? ' text-primary' : ''}${item.subSection!.length > index + 1 ? \" border-0\" : (list.length > indexList + 1 ? \" border-bottom\" : \"\")}`}>\n                      {section.label}\n                    </Link>\n                  )\n                }\n\n              </ul>\n              : null\n          }\n\n        </React.Fragment>\n      )\n    }\n\n  </ul>\n};","import TwitterIcon from '@material-ui/icons/Twitter';\n\nexport const TwitterLink = () => {\n  return <div className=\"twitter-link position-fixed bottom-0\" style={{ right: '10px' }}>\n    <a href=\"https://twitter.com/StotzAlicia\"\n      className=\"text-muted\"\n      style={{ textDecoration: 'none' }}\n      target=\"_blank\"\n      rel=\"noreferrer\">\n      <TwitterIcon /> @StotzAlicia\n    </a>\n  </div>\n}","import TwitterIcon from '@material-ui/icons/Twitter';\n\nexport const Home = () => {\n\treturn <div className=\"Home-page container row\">\n\t\t<div className=\"col-12\">\n\t\t\t<h1 className=\"display-2 mt-5 text-center\">\n\t\t\t\tA la découverte de Testing Library pour React\n\t\t\t</h1>\n\t\t\t<p className=\"lead text-center text-secondary mt-3\">\n\t\t\t\t<TwitterIcon /> @StotzAlicia\n\t\t\t</p>\n\t\t</div>\n\t</div>\n}","import ArrowForwardIcon from '@material-ui/icons/ArrowForward';\n\nexport const Introduction = () => {\n  return <div className=\"introduction-page container row\">\n    <div className=\"col-12\">\n      <h3 className=\"mb-3\">Introduction</h3>\n      <p className=\"mb-4\">\n        <ArrowForwardIcon fontSize=\"small\" /> React Testing Library (RTL) par Kent C. Dodds.\n      </p>\n      <p className=\"mb-2\">\n        <ArrowForwardIcon fontSize=\"small\" /> Experience utilisateur.\n      </p>\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <figure className=\"mb-0\">\n            <blockquote className=\"blockquote\">\n              <p>The more your tests resemble the way your software is used, the more confidence they can give you.</p>\n            </blockquote>\n            <figcaption className=\"blockquote-footer mb-0\">\n              Guiding Principles in <cite title=\"Source Title\">React Testing Library web site</cite>\n            </figcaption>\n          </figure>\n        </div>\n      </div>\n      <p className=\"mb-4\">\n        <ArrowForwardIcon fontSize=\"small\" />N'encourage pas à tester les détails d'implémentation.\n      </p>\n      <p className=\"mb-4\">\n        <ArrowForwardIcon fontSize=\"small\" /> N'est pas un \"test runner\" ou un framework.\n      </p>\n      <p className=\"mb-4\">\n        <ArrowForwardIcon fontSize=\"small\" />React Testing Library est inclu dans create-react-app.</p>\n    </div>\n  </div>\n}","import React from 'react';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport { IPokemon, IPokemonType } from '../../../contexts/pokedex.context';\n\nexport interface IPokemonCardProps {\n  pokemon: IPokemon;\n  type?: \"Mine\" | \"Grass\";\n  pokeball?: boolean;\n  removeFct?: (id: number) => void;\n  addFct?: (id: number) => void;\n}\n\nexport const PokemonCard = ({ pokemon, type, pokeball, removeFct, addFct }: IPokemonCardProps) => {\n  const [showInformation, setShowInformation] = React.useState<Boolean>(false);\n\n  return <div className=\"pokemon-card card mb-2\">\n    <div className=\"card-body\"\n      title={type ? (type === \"Mine\" ? \"Pokemon card: Pokedex\" : \"Pokemon card\") : \"Pokemon card\"}>\n      <div className=\"d-flex align-items-baseline justify-content-between\">\n        <h5 className=\"card-title text-capitalize\" title=\"Pokemon name\">{pokemon.name}</h5>\n        <span title=\"Pokemon number\">{pokemon.order}</span>\n      </div>\n\n      <h6 className=\"card-subtitle mb-2 text-muted\">{type === \"Mine\" ? \"Pokedex\" : \"\"}</h6>\n      <table className=\"table table-striped table-sm\" title=\"Pokemon information\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\">Height</th>\n            <td title=\"Pokemon information - height\">{pokemon.height}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Weight</th>\n            <td title=\"Pokemon information - weight\">{pokemon.weight}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Base experience</th>\n            <td title=\"Pokemon information - base experience\">{pokemon.base_experience}</td>\n          </tr>\n          {\n            (showInformation && pokemon.types) &&\n            <tr>\n              <th scope=\"row\">Types</th>\n              <td title=\"Pokemon information - types\">\n                {\n                  pokemon.types.map((type: IPokemonType, index: number) =>\n                    <React.Fragment key={index}>\n                      <a className=\"text-capitalize\"\n                        href={type.url}\n                        rel=\"noreferrer\"\n                        target=\"_blank\">\n                        {type.name}\n                      </a><br />\n                    </React.Fragment>\n                  )\n                }\n              </td>\n            </tr>\n          }\n        </tbody>\n        {\n          pokemon.types ?\n            <tfoot>\n              <tr>\n                <td className=\"text-center\" colSpan={2}>\n                  <button type=\"button\"\n                    onClick={() => setShowInformation(!showInformation)}\n                    className=\"btn btn-link btn-sm w-100 bg-white\"\n                    title={showInformation ? \"Show less information\" : \"Show more information\"}>\n                    {\n                      showInformation ?\n                        <KeyboardArrowUpIcon fontSize=\"small\" />\n                        : <KeyboardArrowDownIcon fontSize=\"small\" />\n                    }\n\n                  </button>\n                </td>\n              </tr>\n            </tfoot>\n            : null\n        }\n      </table>\n      <a type=\"button\"\n        href={`https://pokeapi.co/api/v2/pokemon/${pokemon.id}`}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"btn btn-light mx-2\"\n        title=\"View Pokemon information\">\n        All information\n      </a>\n      {\n        type ?\n          (type === \"Mine\" ?\n            <button\n              className=\"btn btn-danger\"\n              disabled={!removeFct}\n              onClick={removeFct ? () => removeFct(pokemon.id) : () => { }}\n              title=\"Remove Pokemon\">\n              Remove\n            </button> :\n            <button\n              className=\"btn btn-success\"\n              title=\"Add Pokemon\"\n              onClick={addFct ? () => addFct(pokemon.id) : () => { }}\n              disabled={!pokeball || !addFct}>\n              Add to Pokedex\n            </button>\n          )\n          : null\n      }\n    </div>\n  </div>\n}","import React from 'react';\nimport ClearIcon from '@material-ui/icons/Clear';\n\nexport interface ISummaryButtonProps {\n  content: JSX.Element;\n  title: JSX.Element;\n}\n\nexport const SummaryButton = ({ content, title }: ISummaryButtonProps) => {\n  const [displaySummary, setDisplaySummary] = React.useState<Boolean>(false);\n  return <div className={`mb-3 summary-button${displaySummary ? \" border p-3\" : \"\"}`}>\n    {\n      displaySummary ?\n        <button\n          type=\"button\"\n          title=\"Hide summary\"\n          onClick={() => setDisplaySummary(false)}\n          className=\"btn btn-light btn-sm float-end\">\n          <ClearIcon fontSize=\"small\" />\n        </button>\n        :\n        <div className=\"d-flex align-items-center justify-content-between\">\n          {title}\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary btn-sm float-right\"\n            style={{ float: \"right\" }}\n            title=\"View summary\"\n            onClick={() => setDisplaySummary(true)}>\n            Summary\n          </button>\n        </div>\n    }\n    {displaySummary ? content : null}\n  </div>\n};","import React from 'react';\n\nexport interface IPokemonType {\n  name: string;\n  url: string;\n}\n\nexport interface IPokemon {\n  id: number;\n  name: string;\n  height: number;\n  order: number;\n  weight: number;\n  base_experience: number;\n  types?: IPokemonType[];\n}\n\nexport const POKEMON: IPokemon[] = [\n  {\n    id: 1,\n    name: \"bulbasaur\",\n    height: 7,\n    order: 1,\n    weight: 69,\n    base_experience: 64,\n    types: [\n      {\n        name: \"grass\",\n        url: \"https://pokeapi.co/api/v2/type/12/\"\n      },\n      {\n        name: \"poison\",\n        url: \"https://pokeapi.co/api/v2/type/4/\"\n      }\n    ]\n  }\n];\n\nexport const POKEMON_WITHOUT_TYPE: IPokemon[] = [\n  {\n    id: 20,\n    name: \"raticate\",\n    height: 7,\n    order: 27,\n    weight: 185,\n    base_experience: 145,\n  }\n];\n\nexport const POKEDEX: IPokemon[] = [\n  {\n    id: 1,\n    name: \"bulbasaur\",\n    height: 7,\n    order: 1,\n    weight: 69,\n    base_experience: 64,\n    types: [\n      {\n        name: \"grass\",\n        url: \"https://pokeapi.co/api/v2/type/12/\"\n      },\n      {\n        name: \"poison\",\n        url: \"https://pokeapi.co/api/v2/type/4/\"\n      }\n    ]\n  },\n  {\n    id: 16,\n    name: \"pidgey\",\n    height: 3,\n    order: 21,\n    weight: 18,\n    base_experience: 50,\n    types: [\n      {\n        name: \"normal\",\n        url: \"https://pokeapi.co/api/v2/type/1/\"\n      },\n      {\n        name: \"flying\",\n        url: \"https://pokeapi.co/api/v2/type/3/\"\n      }\n    ]\n  }\n];\n\ninterface PokedexContextProps {\n  pokemon: IPokemon[];\n\n  removePokemon: (id: number) => void;\n  addPokemon: (newPokemon: IPokemon) => void;\n}\n\nexport const PokedexContext = React.createContext<PokedexContextProps>({\n  pokemon: POKEDEX,\n\n  removePokemon: (_id: number) => { /* */ },\n  addPokemon: (_newPokemon: IPokemon) => { /* */ }\n});\n\nexport const PokedexProvider: React.FC = ({ children }) => {\n  const [pokemon, setPokemon] = React.useState<IPokemon[]>(POKEDEX);\n\n  const removePokemon = (id: number): void => {\n    const initialArray = [...pokemon];\n    const findPokemonIndex = initialArray.findIndex((p: IPokemon) => p.id === id);\n    if (findPokemonIndex > -1) {\n      initialArray.splice(findPokemonIndex, 1)\n      setPokemon(initialArray);\n    }\n  }\n\n  const addPokemon = (newPokemon: IPokemon): void => {\n    const list: IPokemon[] = [...pokemon];\n    list.push(newPokemon);\n    setPokemon(list);\n  }\n\n  return (\n    <PokedexContext.Provider value={{\n      pokemon,\n      removePokemon,\n      addPokemon\n    }}>\n      {children}\n    </PokedexContext.Provider>\n  )\n}","import { PokemonCard } from './PokemonCard';\nimport { SummaryButton } from '../../shared/SummaryButton';\n\nimport { POKEMON, IPokemon } from '../../../contexts/pokedex.context';\n\nconst SUMMARY_CONTENT: JSX.Element = <div>\n  <ul>\n    <li>\n      <h6>\n        Rendre un composant{\" \"}\n        <a href=\"https://testing-library.com/docs/react-testing-library/api#render\">(reference)</a>\n      </h6>\n      <span>RTL est utilisée pour interagire avec le composant comme un utilisateur le ferait</span>\n      <pre className=\"mt-3\"><code>\n        <mark>render(monComposant);</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        Acceder au composant et l'afficher{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#screen\">(reference)</a></h6>\n      <pre className=\"mt-3\"><code>\n        <mark>screen.debug();</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        Sélectionner un élément{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#priority\">(reference)</a>\n      </h6>\n      <span>Après avoir rendu le composant - RTL offre differentes fonctions de recherche</span>\n      <pre className=\"mt-3\"><code>\n        <mark>screen.getByText(...);</mark>\n        <mark>screen.getByRole(...);</mark>\n      </code></pre>\n    </li>\n  </ul>\n</div>\nconst TITLE_CONTENT: JSX.Element =\n  <div>\n    <h3 className=\"mb-0\">Card Pokemon</h3>\n    <span className=\"text-secondary fw-lighter\">render, screen, getBy</span>\n  </div>\nexport const DefaultPokemonCard = () => {\n  return <div className=\"container row\">\n    <div className=\"col-12\">\n      <SummaryButton title={TITLE_CONTENT} content={SUMMARY_CONTENT} />\n    </div>\n    {POKEMON.map((pokemon: IPokemon) =>\n      <div key={pokemon.id} className=\"col-12 col-lg-6\">\n        <PokemonCard pokemon={pokemon} />\n      </div>\n    )}\n  </div>\n}","import { PokemonCard } from './PokemonCard';\nimport { SummaryButton } from '../../shared/SummaryButton';\n\nimport { POKEMON_WITHOUT_TYPE, IPokemon } from '../../../contexts/pokedex.context';\n\nconst SUMMARY_CONTENT: JSX.Element = <div>\n\t<ul>\n\t\t<li className=\"mt-3\">\n\t\t\t<h6>\n\t\t\t\tChercher un élément{\" \"}\n\t\t\t\t<a href=\"https://testing-library.com/docs/queries/about#types-of-queries\">(reference)</a>\n\t\t\t</h6>\n\t\t\t<span>getBy renvoit une erreur lorsque l'élément n'est pas trouvé</span>\n\t\t\t<pre className=\"mt-3\"><code>\n\t\t\t\t<mark>screen.queryByText(...);</mark>\n\t\t\t</code></pre>\n\t\t</li>\n\t</ul>\n</div>\nconst TITLE_CONTENT: JSX.Element =\n\t<div>\n\t\t<h3 className=\"mb-0\">Card Pokemon - Sans type</h3>\n\t\t<span className=\"text-secondary fw-lighter\">queryBy</span>\n\t</div>\nexport const PokemonCardWithoutType = () => {\n\treturn <div className=\"container row\">\n\t\t<div className=\"col-12\">\n\t\t\t<SummaryButton title={TITLE_CONTENT} content={SUMMARY_CONTENT} />\n\t\t</div>\n\t\t{POKEMON_WITHOUT_TYPE.map((pokemon: IPokemon) =>\n\t\t\t<div key={pokemon.id} className=\"col-12 col-lg-6\">\n\t\t\t\t<PokemonCard pokemon={pokemon} />\n\t\t\t</div>\n\t\t)}\n\t</div>\n}","import React from 'react';\n\nimport { PokemonCard } from './PokemonCard';\nimport { SummaryButton } from '../../shared/SummaryButton';\n\nimport { PokedexContext, IPokemon } from '../../../contexts/pokedex.context';\n\nconst SUMMARY_CONTENT: JSX.Element = <div>\n  <ul>\n    <li>\n      <h6>\n        Sélectionner plusieurs éléments{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#types-of-queries\">(reference)</a>\n      </h6>\n      <pre className=\"mt-3\"><code>\n        <mark>screen.getAllByRole(...);</mark>\n        <mark>screen.queryAllByText(...);</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        Sélectionner un élément{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#priority\">(reference)</a>\n      </h6>\n      <span>RTL dispose de plusieurs fonctions de selection</span>\n      <pre className=\"mt-3\"><code>\n        <mark>screen.getByTitle(...);</mark>\n      </code></pre>\n      <ul>\n        <li>Role : getByRole</li>\n        <li>LabelText : getByLabelText</li>\n        <li>PlaceholderText : getByPlaceholderText</li>\n        <li>AltText : getByAltText</li>\n        <li>Title : getByTitle</li>\n        <li>DisplayValue : getByDisplayValue</li>\n      </ul>\n    </li>\n  </ul>\n</div>\nconst TITLE_CONTENT: JSX.Element =\n  <div>\n    <h3 className=\"mb-0\">Mon Pokedex</h3>\n    <span className=\"text-secondary fw-lighter\">getAll, type de recherche</span>\n  </div>\nexport const Pokedex = () => {\n  const { pokemon, removePokemon } = React.useContext(PokedexContext);\n\n  return <div className=\"container row\">\n    <div className=\"col-12\">\n      <SummaryButton title={TITLE_CONTENT} content={SUMMARY_CONTENT} />\n    </div>\n    {pokemon.map((item: IPokemon) =>\n      <div key={item.id} className=\"col-12 col-lg-6\">\n        <PokemonCard pokemon={item} type=\"Mine\" removeFct={removePokemon} />\n      </div>\n    )}\n  </div>\n}","import React from 'react';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport interface IToolBarProps {\n  numberOfPokemon: number;\n  withFakePromise?: boolean;\n  setNumberOfPokeball?: (numberOfPokeball: number) => void;\n}\n\nexport const ToolBar = ({ numberOfPokemon, withFakePromise, setNumberOfPokeball }: IToolBarProps) => {\n  const [pokeball, setPokeball] = React.useState<number>(0);\n  const [inputPokeball, setInputPokeball] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (setNumberOfPokeball) {\n      setNumberOfPokeball(pokeball);\n    }\n  }, [pokeball, setNumberOfPokeball]);\n\n  const typePokeballHandler = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    setInputPokeball(parseInt(e.currentTarget.value, 10));\n  }\n\n  const preventKeyDownHandler = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.key === 'e' || e.key === ',' || e.key === '.' || e.key === ';') {\n      e.preventDefault();\n    }\n  }\n\n  const fakePromise = (pokeballNumber: number): Promise<number> => {\n    return Promise.resolve(pokeballNumber);\n  }\n\n  const onClickWithPromise = async (pNumber: number) => {\n    const pokeballNumber = await fakePromise(pNumber);\n    setPokeball(pokeball + pokeballNumber);\n  }\n\n  return <div className=\"tool-bar card px-3\">\n    <div className=\"d-flex justify-content-between py-2 align-items-center\">\n      <div className=\"information\">\n        <span className=\"me-2\" title=\"Number of pokemon in pokedex\">\n          Pokedex: <strong>{numberOfPokemon}</strong>\n        </span>\n        <span className=\"text-secondary\">|</span>\n        <span className=\"ms-2\" title=\"Number of pokeball\">\n          Pokeball: <strong>{pokeball}</strong>\n        </span>\n      </div>\n      <div className=\"input-group w-50\">\n        <input\n          type=\"number\"\n          id=\"pokeball\"\n          name=\"pokeball\"\n          onInput={typePokeballHandler}\n          title=\"Number of Pokeball to add\"\n          className=\"form-control form-control-sm\"\n          min=\"0\"\n          onKeyDown={preventKeyDownHandler}\n          value={inputPokeball || \"\"}\n          placeholder=\"ex : 5\" />\n        <button\n          className=\"btn btn-outline-secondary btn-sm\"\n          title=\"Add number of Pokeball write in input\"\n          disabled={!inputPokeball}\n          onClick={() => inputPokeball ?\n            (withFakePromise ? onClickWithPromise(inputPokeball) : setPokeball(pokeball + inputPokeball))\n            : {}}\n          type=\"button\">\n          Ajouter les Pokeball\n        </button>\n        <button\n          className=\"btn btn-outline-secondary btn-sm\"\n          title=\"Add one Pokeball\"\n          onClick={() => setPokeball(pokeball + 1)}\n          type=\"button\">\n          <AddIcon fontSize=\"small\" />\n        </button>\n      </div>\n    </div>\n  </div>\n};","import React from 'react';\n\nimport { PokedexContext, IPokemon } from '../../../contexts/pokedex.context';\n\nimport { PokemonCard } from './PokemonCard';\nimport { ToolBar } from './ToolBar';\nimport { SummaryButton } from '../../shared/SummaryButton';\n\nconst POKEMON: IPokemon = {\n  id: 10,\n  name: \"caterpie\",\n  height: 3,\n  order: 14,\n  weight: 29,\n  base_experience: 39,\n  types: [\n    {\n      name: \"bug\",\n      url: \"https://pokeapi.co/api/v2/type/7/\"\n    }\n  ]\n}\n\nconst SUMMARY_CONTENT: JSX.Element = <div>\n  <ul>\n    <li>\n      <h6>\n        FireEvent{\" \"}\n        <a href=\"https://testing-library.com/docs/dom-testing-library/api-events#fireevent\">(reference)</a>\n      </h6>\n      <span>Pour simuler une interraction avec le composant</span>\n      <pre className=\"mt-3\"><code>\n        <mark>fireEvent.click(...);</mark>\n        <mark>fireEvent.change(...)</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        UserEvent{\" \"}\n        <a href=\"https://testing-library.com/docs/ecosystem-user-event\">(reference)</a>\n      </h6>\n      <span>RTL apporte une extension pour les évènements des utilisateurs : UserEvent. Elle est plus proche du comportement du browser. Mais elle n'inclus pas encore toutes les fonctionnalités de FireEvent </span>\n      <pre className=\"mt-3\"><code>\n        <mark>userEvent.type(...);</mark>\n      </code></pre>\n    </li>\n    <li>\n      <h6>\n        FindBy{\" \"}\n        <a href=\"https://testing-library.com/docs/queries/about#types-of-queries\">(reference)</a>\n      </h6>\n      <span>Utilisé pour les élements de type asynchrone, retourne une Promise</span>\n      <pre className=\"mt-3\"><code>\n        <mark>await screen.findBy(...);</mark>\n      </code></pre>\n    </li>\n  </ul>\n</div>\nconst TITLE_CONTENT: JSX.Element =\n  <div>\n    <h3 className=\"mb-0\">Zone de jeu</h3>\n    <span className=\"text-secondary fw-lighter\">user event, findBy, async</span>\n  </div>\nexport const GameZone = () => {\n  const [pokeball, setPokeball] = React.useState<number>(0);\n  const { pokemon, addPokemon } = React.useContext(PokedexContext);\n  const [freePokemon, setFreePokemon] = React.useState<IPokemon | null>(POKEMON);\n\n  const addFct = () => {\n    if (Date.now() % 2 === 0 && freePokemon !== null) {\n      addPokemon(freePokemon);\n      setFreePokemon(null)\n    }\n  }\n\n  return <div className=\"container row\">\n    <div className=\"col-12\">\n      <SummaryButton title={TITLE_CONTENT} content={SUMMARY_CONTENT} />\n    </div>\n    <div className=\"col-12 mb-3\">\n      <ToolBar\n        numberOfPokemon={pokemon.length}\n        setNumberOfPokeball={(pokeballNumber: number) => setPokeball(pokeballNumber)}\n      />\n    </div>\n    {\n      freePokemon ?\n        <div className=\"col-12 col-lg-6\">\n          <PokemonCard\n            pokemon={freePokemon}\n            type=\"Grass\"\n            pokeball={pokeball > 0}\n            addFct={addFct} />\n        </div>\n        : null\n    }\n  </div>\n}","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport { DefaultPokemonCard } from './DefaultPokemonCard';\nimport { PokemonCardWithoutType } from './PokemonCardWithoutType';\nimport { Pokedex } from './Pokedex';\nimport { GameZone } from './GameZone';\n\nexport const Examples = () => {\n  return <div className=\"example-page\">\n    <Switch>\n      <Route path=\"/examples/default\" component={DefaultPokemonCard} />\n      <Route path=\"/examples/withoutType\" component={PokemonCardWithoutType} />\n      <Route path=\"/examples/pokedex\" component={Pokedex} />\n      <Route path=\"/examples/gameZone\" component={GameZone} />\n      <Redirect to=\"/examples/default\" />\n    </Switch>\n  </div>\n}","export default __webpack_public_path__ + \"static/media/queryTab.8efd99d8.png\";","import queryTab from './queryTab.png';\n\nexport const Conclusion = () => {\n  return <div className=\"conclusion-page container row\">\n    <div className=\"col-12\">\n      <h3 className=\"mb-3\">Conclusion</h3>\n      <div className=\"text-center\">\n        <img src={queryTab} alt=\"Query table\" width=\"65%\" /><br />\n        <a\n          className=\"small\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href=\"https://testing-library.com/docs/react-testing-library/cheatsheet#queries\">\n          (Source : React Testing web site - Cheatsheet)\n        </a>\n      </div>\n\n    </div>\n  </div>\n}","import React from 'react';\n\nexport const Sources = () => {\n  return <div className=\"Sources-page container row\">\n    <div className=\"col-12\">\n      <h3 className=\"mb-3\">Sources</h3>\n      <ul>\n        <li className=\"mb-3\">\n          Testing library documentation :{\" \"}\n          <a\n            href=\"https://testing-library.com/\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://testing-library.com/\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Github testing library :{\" \"}\n          <a\n            href=\"https://github.com/testing-library/jest-dom\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://github.com/testing-library/jest-dom\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          PokeAPI :{\" \"}\n          <a\n            href=\"https://pokeapi.co/\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://pokeapi.co/\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          How to use React Testing Library Tutorial :{\" \"}\n          <a\n            href=\"https://www.robinwieruch.de/react-testing-library\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://www.robinwieruch.de/react-testing-library\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Test Scenarios with React Testing Library :{\" \"}\n          <a\n            href=\"https://react-testing-library-examples.netlify.app/\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://react-testing-library-examples.netlify.app/\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Testing a Create React App TypeScript Project with Jest and React Testing Library :{\" \"}\n          <a\n            href=\"https://www.newline.co/@kchan/testing-a-create-react-app-typescript-project-with-jest-and-react-testing-library--c157b34e\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://www.newline.co/@kchan/testing-a-create-react-app-typescript-project-with-jest-and-react-testing-library--c157b34e\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Testing Playground :{\" \"}\n          <a\n            href=\"https://testing-playground.com/\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://testing-playground.com/\n          </a>\n        </li>\n        <li className=\"mb-3\">\n          Test your React App with react testing library and jest-dom :{\" \"}\n          <a\n            href=\"https://aatifbandey.medium.com/test-your-react-app-with-react-testing-library-and-jest-dom-26b92201bbe3\"\n            rel=\"noreferrer\"\n            target=\"_blank\">\n            https://testing-playground.com/\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n}","import React from 'react';\nimport { Switch, Route, useLocation } from 'react-router-dom';\n\nimport { Navbar } from '../shared/Navbar';\nimport { SectionList } from '../shared/SectionList';\nimport { TwitterLink } from '../shared/TwitterLink';\n\nimport { Home } from '../routes/Home/Home';\nimport { Introduction } from '../routes/Introduction/Introduction';\nimport { Examples } from '../routes/Examples/Examples';\nimport { Conclusion } from '../routes/Conclusion/Conclusion';\nimport { Sources } from '../routes/Sources/Sources';\nimport { PokedexProvider } from '../../contexts/pokedex.context';\n\n\nconst App: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <PokedexProvider>\n      <div className=\"App\" style={{ height: '100vh' }}>\n        <Navbar />\n        <div className=\"row h-100\">\n          <div className=\"col-3 py-4 pe-0\">\n            <SectionList />\n          </div>\n          <div className=\"col-9 py-4 bg-light\">\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/introduction\" component={Introduction}></Route>\n              <Route path=\"/examples\" component={Examples}></Route>\n              <Route path=\"/conclusion\" component={Conclusion}></Route>\n              <Route path=\"/sources\" component={Sources}></Route>\n            </Switch>\n            {location.pathname !== \"/\" ? <TwitterLink /> : null}\n          </div>\n        </div>\n      </div>\n    </PokedexProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}