{
  "RTL getBy": {
    "prefix": "rtl.getBy",
    "body": [
      "expect(screen.getByText('test')).toBeInTheDocument();"
    ],
    "description": "First example getBy"
  },
  "RTL console log getByRole": {
    "prefix": "rtl.cl.role",
    "body": [
      "screen.getByRole('');"
    ],
    "description": "Console.log getByRole output"
  },
  "RTL getByRole": {
    "prefix": "rtl.role",
    "body": [
      "expect(screen.getByRole('link')).toBeInTheDocument();"
    ],
    "description": "First example getByRole"
  },
  "RTL queryByRole": {
    "prefix": "rtl.queryBy",
    "body": [
      "expect(screen.queryByRole('button', { name:'Show more information' })).toBeNull();"
    ],
    "description": "First example queryByRole"
  },
  "RTL finBy": {
    "prefix": "rtl.findBy",
    "body": [
      "const newPokeballNumber = await screen.findByTitle('Number of pokeball');"
    ],
    "description": "First example queryByRole"
  },
  "RTL prepare Pokemon Card test": {
    "prefix": "rtl.pokemonCard.test",
    "body": [
      "import React from \"react\";",
      "import { render, screen } from \"@testing-library/react\";",
      "",
      "import { IPokemonCardProps, PokemonCard } from \"./PokemonCard\";",
      "",
      "const defaultProps: IPokemonCardProps = {",
      "pokemon: {",
      "id: 1,",
      "name: \"test\",",
      "height: 15,",
      "order: 1,",
      "weight: 9,",
      "base_experience: 55,",
      "types: [",
      "{",
      "name: \"test type\",",
      "url: \"https://test/\"",
      "}",
      "]",
      "}",
      "};",
      "",
      "const defaultPropsWithoutTypes: IPokemonCardProps = {",
      "pokemon: {",
      "id: 1,",
      "name: \"test 2\",",
      "height: 18,",
      "order: 3,",
      "weight: 12,",
      "base_experience: 64",
      "}",
      "};",
      "",
      "describe(\"Pokemon card component\", () => {",
      "describe(\"Default card\", () => {",
      "beforeEach(() => {",
      "render(<PokemonCard {...defaultProps} />);",
      "});",
      "",
      "it(\"Should display card\", () => {",
      "screen.debug();",
      "});",
      "",
      "xit(\"Should display table information\", () => {",
      "expect(screen.getByText(\"15\")).toBeInTheDocument();",
      "expect(screen.getByText(\"9\")).toBeInTheDocument();",
      "expect(screen.getByText(\"55\")).toBeInTheDocument();",
      "});",
      "",
      "xit(\"Should display more information button\", () => {",
      "});",
      "});",
      "",
      "describe(\"Pokemon card without types\", () => {",
      "beforeEach(() => {",
      "render(<PokemonCard {...defaultPropsWithoutTypes} />);",
      "});",
      "",
      "xit(\"Should not display more information button\", () => {",
      "expect(screen.queryByRole(\"button\", { name: \"Show more information\" })).toBeNull();",
      "})",
      "});",
      "});"
    ],
    "description": "Prepare Pokemon card test"
  },
  "RTL prepare Pokedex test": {
    "prefix": "rtl.pokedex.test",
    "body": [
      "import React from \"react\";",
      "import { render, screen } from \"@testing-library/react\";",
      "",
      "import { Pokedex } from \"./Pokedex\";",
      "",
      "xdescribe(\"Pokedex page\", () => {",
      "describe(\"Default page\", () => {",
      "beforeEach(() => {",
      "render(<Pokedex />);",
      "});",
      "",
      "it(\"Should display 3 cards\", () => {",
      "const cards = screen.getAllByTitle(\"Pokemon card: Pokedex\");",
      "expect(cards).toHaveLength(3);",
      "});",
      "});",
      "});"
    ],
    "description": "Prepare Pokedex test"
  },
  "RTL prepare Toolbar test": {
    "prefix": "rtl.gameZone.test",
    "body": [
      "import React from \"react\";",
      "import { render, screen, fireEvent } from \"@testing-library/react\";",
      "import userEvent from \"@testing-library/user-event\";",
      "",
      "import { ToolBar, IToolBarProps } from \"./ToolBar\";",
      "",
      "const defaultProps: IToolBarProps = {",
      " numberOfPokemon: 3",
      "};",
      "",
      "const defaultPropsWithFakePromis: IToolBarProps = {",
      "numberOfPokemon: 3,",
      "withFakePromise: true",
      "}",
      "",
      "xdescribe(\"ToolBar component\", () => {",
      "describe(\"Event and actions\", () => {",
      "beforeEach(() => {",
      "render(<ToolBar {...defaultProps} />);",
      "});",
      "",
      "it(\"Should increment pokeball number with add button (only one)\", async () => {",
      "fireEvent.click(",
      "screen.getByRole(",
      "\"button\",",
      "{ name: \"Add one Pokeball\" }",
      ")",
      ");",
      "",
      "const newPokeballNumber = screen.getByTitle(\"Number of pokeball\");",
      "",
      "expect(newPokeballNumber.textContent)",
      ".toEqual(\"Pokeball: 1\");",
      "});",
      "",
      "xit(\"Should increment pokeball number if user type something in free input\", async () => {",
      "userEvent.type(",
      "screen.getByPlaceholderText(\"ex : 5\"), \"6\"",
      ");",
      "userEvent.click(",
      "screen.getByRole(",
      "\"button\",",
      "{ name: \"Add number of Pokeball write in input\" }",
      ")",
      ");",
      "",
      "const newPokeballNumber = screen.getByTitle(\"Number of pokeball\");",
      "",
      "expect(screen.getByDisplayValue(\"6\")).toBeInTheDocument();",
      "expect(newPokeballNumber.textContent).toEqual(\"Pokeball: 6\");",
      "});",
      "});",
      "",
      "describe(\"Event and actions (async)\", () => {",
      "it(\"Should increment pokeball number if user type something in free input\", async () => {",
      "render(<ToolBar {...defaultPropsWithFakePromis} />);",
      "",
      "userEvent.type(",
      "screen.getByPlaceholderText(\"ex : 5\"), \"6\"",
      ");",
      "fireEvent.click(",
      "screen.getByRole(",
      "\"button\",",
      "{ name: \"Add number of Pokeball write in input\" }",
      ")",
      ");",
      "",
      "const newPokeballNumber = await screen.findByTitle(\"Number of pokeball\");",
      "expect(screen.getByDisplayValue(\"6\")).toBeInTheDocument();",
      "expect(newPokeballNumber.textContent).toEqual(\"Pokeball: 6\");",
      "});",
      "});",
      "});"
    ],
    "description": "Prepare Toolbar test"
  }
}